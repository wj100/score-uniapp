"use strict";const t=require("../common/vendor.js");exports.getDoubleMatches=async function(a="all"){try{const e=await t.tr.callFunction({name:"badminton-api",data:{action:"getDoubleMatches",data:{timeRange:a}}});return 0===e.result.code?e.result.data:(console.error("获取双打比赛记录失败:",e.result.message),[])}catch(e){return console.error("获取双打比赛记录异常:",e),[]}},exports.getDoubleStats=async function(a="all"){try{const e=await t.tr.callFunction({name:"badminton-api",data:{action:"getDoubleStats",data:{timeRange:a}}});return 0===e.result.code?e.result.data:(console.error("获取双打统计数据失败:",e.result.message),{stats:{},matches:[]})}catch(e){return console.error("获取双打统计数据异常:",e),{stats:{},matches:[]}}},exports.getPlayers=async function(){try{console.log("调用云函数获取队员列表...");const a=await t.tr.callFunction({name:"badminton-api",data:{action:"getPlayers"}});if(console.log("云函数返回结果:",a),0===a.result.code){const t=a.result.data.map((t=>t.name));return console.log("解析后的队员列表:",t),t}return console.error("获取队员列表失败:",a.result.message),[]}catch(a){return console.error("获取队员列表异常:",a),[]}},exports.getSingleMatches=async function(a="all"){try{const e=await t.tr.callFunction({name:"badminton-api",data:{action:"getSingleMatches",data:{timeRange:a}}});return 0===e.result.code?e.result.data:(console.error("获取单打比赛记录失败:",e.result.message),[])}catch(e){return console.error("获取单打比赛记录异常:",e),[]}},exports.getSingleStats=async function(a="all"){try{const e=await t.tr.callFunction({name:"badminton-api",data:{action:"getSingleStats",data:{timeRange:a}}});return 0===e.result.code?e.result.data:(console.error("获取单打统计数据失败:",e.result.message),{stats:{},matches:[]})}catch(e){return console.error("获取单打统计数据异常:",e),{stats:{},matches:[]}}},exports.initPlayers=async function(){try{return 0===(await t.tr.callFunction({name:"badminton-api",data:{action:"initPlayers"}})).result.code}catch(a){return console.error("初始化队员失败:",a),!1}},exports.saveDoubleMatch=async function(a){try{const e=await t.tr.callFunction({name:"badminton-api",data:{action:"submitDoubleMatch",data:a}});return 0===e.result.code?{id:e.result.data.match_id,...a}:(console.error("保存双打比赛记录失败:",e.result.message),null)}catch(e){return console.error("保存双打比赛记录异常:",e),null}},exports.saveSingleMatch=async function(a){try{const e=await t.tr.callFunction({name:"badminton-api",data:{action:"submitSingleMatch",data:a}});return 0===e.result.code?{id:e.result.data.match_id,...a}:(console.error("保存单打比赛记录失败:",e.result.message),null)}catch(e){return console.error("保存单打比赛记录异常:",e),null}};
