"use strict";const e=require("../common/vendor.js");exports.getDoubleMatches=async function(t="all"){try{const a=await e.tr.callFunction({name:"badminton-api",data:{action:"getDoubleMatches",data:{timeRange:t}}});return 0===a.result.code?a.result.data:(console.error("获取双打比赛记录失败:",a.result.message),[])}catch(a){return console.error("获取双打比赛记录异常:",a),[]}},exports.getDoubleStats=async function(t="all"){try{const a=await e.tr.callFunction({name:"badminton-api",data:{action:"getDoubleStats",data:{timeRange:t}}});return 0===a.result.code?a.result.data:(console.error("获取双打统计数据失败:",a.result.message),{stats:{},matches:[]})}catch(a){return console.error("获取双打统计数据异常:",a),{stats:{},matches:[]}}},exports.getPlayers=async function(){let t=null;for(let o=0;o<3;o++)try{console.log(`调用云函数获取队员列表... (第${o+1}次尝试)`);const a=await e.tr.callFunction({name:"badminton-api",data:{action:"getPlayers"}});if(console.log("云函数返回结果:",a),0===a.result.code){const e=a.result.data.map((e=>e.name));return console.log("解析后的队员列表:",e),e}if(console.error("获取队员列表失败:",a.result.message),t=new Error(a.result.message),a.result.message&&a.result.message.includes("资源耗尽")&&o<2){console.log(`数据库资源耗尽，等待 ${2*(o+1)} 秒后重试...`),await new Promise((e=>setTimeout(e,2e3*(o+1))));continue}return["言志","小鲁","建华","汪骏","杭宁"]}catch(a){console.error(`获取队员列表异常 (第${o+1}次尝试):`,a),t=a,o<2&&(console.log(`等待 ${2*(o+1)} 秒后重试...`),await new Promise((e=>setTimeout(e,2e3*(o+1)))))}return console.error("所有重试都失败，使用降级数据"),e.index.showToast({title:"网络异常，使用离线数据",icon:"none",duration:3e3}),["言志","小鲁","建华","汪骏","杭宁"]},exports.getSingleMatches=async function(t="all"){try{const a=await e.tr.callFunction({name:"badminton-api",data:{action:"getSingleMatches",data:{timeRange:t}}});return 0===a.result.code?a.result.data:(console.error("获取单打比赛记录失败:",a.result.message),[])}catch(a){return console.error("获取单打比赛记录异常:",a),[]}},exports.getSingleStats=async function(t="all"){try{const a=await e.tr.callFunction({name:"badminton-api",data:{action:"getSingleStats",data:{timeRange:t}}});return 0===a.result.code?a.result.data:(console.error("获取单打统计数据失败:",a.result.message),{stats:{},matches:[]})}catch(a){return console.error("获取单打统计数据异常:",a),{stats:{},matches:[]}}},exports.initPlayers=async function(){for(let a=0;a<2;a++)try{console.log(`初始化队员... (第${a+1}次尝试)`);const t=await e.tr.callFunction({name:"badminton-api",data:{action:"initPlayers"}});if(console.log("初始化队员结果:",t),0===t.result.code)return!0;if(console.error("初始化队员失败:",t.result.message),t.result.message&&t.result.message.includes("资源耗尽")&&a<1){console.log(`数据库资源耗尽，等待 ${3*(a+1)} 秒后重试...`),await new Promise((e=>setTimeout(e,3e3*(a+1))));continue}return!1}catch(t){console.error(`初始化队员异常 (第${a+1}次尝试):`,t),a<1&&(console.log(`等待 ${3*(a+1)} 秒后重试...`),await new Promise((e=>setTimeout(e,3e3*(a+1)))))}return console.error("初始化队员失败，所有重试都失败"),!1},exports.saveDoubleMatch=async function(t){try{const a=await e.tr.callFunction({name:"badminton-api",data:{action:"submitDoubleMatch",data:t}});return 0===a.result.code?{id:a.result.data.match_id,...t}:(console.error("保存双打比赛记录失败:",a.result.message),null)}catch(a){return console.error("保存双打比赛记录异常:",a),null}},exports.saveSingleMatch=async function(t){try{const a=await e.tr.callFunction({name:"badminton-api",data:{action:"submitSingleMatch",data:t}});return 0===a.result.code?{id:a.result.data.match_id,...t}:(console.error("保存单打比赛记录失败:",a.result.message),null)}catch(a){return console.error("保存单打比赛记录异常:",a),null}};
