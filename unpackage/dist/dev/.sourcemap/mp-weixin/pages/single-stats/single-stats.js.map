{"version":3,"file":"single-stats.js","sources":["pages/single-stats/single-stats.vue","pages/single-stats/single-stats.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <!-- 时间筛选 -->\n    <view class=\"time-filter\">\n      <view \n        v-for=\"(item, index) in timeOptions\" \n        :key=\"index\"\n        class=\"time-item\"\n        :class=\"{ active: currentTimeRange === item.value }\"\n        @click=\"changeTimeRange(item.value)\"\n      >\n        <text>{{ item.label }}</text>\n      </view>\n    </view>\n\n    <!-- 日期范围显示 -->\n    <view class=\"date-range\">\n      <text>日期范围</text>\n      <text class=\"date-text\">{{ dateRangeText }}</text>\n    </view>\n\n    <!-- 数据统计 -->\n    <view class=\"stats-section\">\n      <text class=\"section-title\">数据统计</text>\n      <view class=\"stats-table\">\n        <view class=\"stats-header\">\n          <text class=\"header-cell\">队员 ▼</text>\n          <text class=\"header-cell\">总分 ▼</text>\n          <text class=\"header-cell\">胜场 ▼</text>\n          <text class=\"header-cell\">负场 ▼</text>\n          <text class=\"header-cell\">胜率</text>\n        </view>\n        <view \n          v-for=\"player in sortedStats\" \n          :key=\"player.name\"\n          class=\"stats-row\"\n        >\n          <text class=\"cell\">{{ player.name }}</text>\n          <text class=\"cell\">{{ player.totalScore }}</text>\n          <text class=\"cell\">{{ player.wins }}</text>\n          <text class=\"cell\">{{ player.losses }}</text>\n          <text class=\"cell\">{{ player.winRate }}</text>\n        </view>\n      </view>\n    </view>\n\n    <!-- 单打对战记录 -->\n    <view class=\"matches-section\">\n      <text class=\"section-title\">单打对战记录</text>\n      <view class=\"matches-list\">\n        <view v-if=\"currentMatches.length === 0\" class=\"no-data\">\n          <text>暂无数据</text>\n        </view>\n        <view v-else>\n          <view class=\"matches-header\">\n            <text class=\"match-header-cell\">日期</text>\n            <text class=\"match-header-cell\">对战</text>\n            <text class=\"match-header-cell\">比分</text>\n          </view>\n          <view \n            v-for=\"match in currentMatches\" \n            :key=\"match.id\"\n            class=\"match-row\"\n          >\n            <text class=\"match-cell\">{{ formatDate(match.date) }}</text>\n            <text class=\"match-cell\">{{ match.player1 }}-{{ match.player2 }}</text>\n            <text class=\"match-cell\">{{ match.score1 }} - {{ match.score2 }}</text>\n          </view>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nimport { getSingleStats, getSingleMatches } from '@/utils/storage.js'\n\nexport default {\n  data() {\n    return {\n      currentTimeRange: 'thisMonth',\n      timeOptions: [\n        { label: '历史所有', value: 'all' },\n        { label: '上月', value: 'lastMonth' },\n        { label: '昨日', value: 'yesterday' },\n        { label: '今日', value: 'today' },\n        { label: '当月', value: 'thisMonth' }\n      ],\n      statsData: {},\n      currentMatches: [],\n      sortField: 'totalScore',\n      sortOrder: 'desc'\n    }\n  },\n  \n  computed: {\n    dateRangeText() {\n      const now = new Date()\n      switch(this.currentTimeRange) {\n        case 'today':\n          return now.toISOString().split('T')[0]\n        case 'yesterday':\n          const yesterday = new Date(now)\n          yesterday.setDate(yesterday.getDate() - 1)\n          return yesterday.toISOString().split('T')[0]\n        case 'thisMonth':\n          const year = now.getFullYear()\n          const month = String(now.getMonth() + 1).padStart(2, '0')\n          const lastDay = new Date(year, now.getMonth() + 1, 0).getDate()\n          return `${year}-${month}-01 至 ${year}-${month}-${String(lastDay).padStart(2, '0')}`\n        case 'lastMonth':\n          const lastMonth = new Date(now.getFullYear(), now.getMonth() - 1, 1)\n          const lastMonthEnd = new Date(now.getFullYear(), now.getMonth(), 0)\n          return `${lastMonth.toISOString().split('T')[0]} 至 ${lastMonthEnd.toISOString().split('T')[0]}`\n        case 'all':\n        default:\n          return '全部时间'\n      }\n    },\n    \n    sortedStats() {\n      const stats = []\n      Object.keys(this.statsData).forEach(playerName => {\n        const playerStats = this.statsData[playerName]\n        const winRate = playerStats.totalMatches > 0 \n          ? Math.round((playerStats.wins / playerStats.totalMatches) * 100) + '%'\n          : '0%'\n        \n        stats.push({\n          name: playerName,\n          totalScore: playerStats.totalScore,\n          wins: playerStats.wins,\n          losses: playerStats.losses,\n          totalMatches: playerStats.totalMatches,\n          winRate\n        })\n      })\n      \n      // 按总分降序排列\n      return stats.sort((a, b) => {\n        if (this.sortField === 'totalScore') {\n          return this.sortOrder === 'desc' ? b.totalScore - a.totalScore : a.totalScore - b.totalScore\n        }\n        return 0\n      })\n    }\n  },\n  \n  onLoad() {\n    this.loadData()\n  },\n  \n  onShow() {\n    this.loadData()\n  },\n  \n  methods: {\n    loadData() {\n      const result = getSingleStats(this.currentTimeRange)\n      this.statsData = result.stats\n      this.currentMatches = result.matches\n    },\n    \n    changeTimeRange(range) {\n      this.currentTimeRange = range\n      this.loadData()\n    },\n    \n    formatDate(dateStr) {\n      const date = new Date(dateStr)\n      const month = String(date.getMonth() + 1).padStart(2, '0')\n      const day = String(date.getDate()).padStart(2, '0')\n      return `${month}-${day}`\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  padding: 32rpx;\n  background-color: #f5f5f5;\n  min-height: 100vh;\n}\n\n.time-filter {\n  display: flex;\n  background: white;\n  border-radius: 16rpx;\n  padding: 8rpx;\n  margin-bottom: 32rpx;\n  box-shadow: 0 4rpx 16rpx rgba(0,0,0,0.1);\n}\n\n.time-item {\n  flex: 1;\n  text-align: center;\n  padding: 16rpx 8rpx;\n  border-radius: 12rpx;\n  font-size: 24rpx;\n}\n\n.time-item.active {\n  background: #4CAF50;\n  color: white;\n}\n\n.time-item:not(.active) {\n  color: #666;\n}\n\n.date-range {\n  background: white;\n  border-radius: 16rpx;\n  padding: 32rpx;\n  margin-bottom: 32rpx;\n  box-shadow: 0 4rpx 16rpx rgba(0,0,0,0.1);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.date-range text:first-child {\n  font-size: 28rpx;\n  color: #333;\n}\n\n.date-text {\n  font-size: 24rpx;\n  color: #666;\n}\n\n.stats-section {\n  margin-bottom: 48rpx;\n}\n\n.section-title {\n  font-size: 32rpx;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 24rpx;\n  display: block;\n}\n\n.stats-table {\n  background: white;\n  border-radius: 16rpx;\n  overflow: hidden;\n  box-shadow: 0 4rpx 16rpx rgba(0,0,0,0.1);\n}\n\n.stats-header {\n  display: flex;\n  background: #f8f8f8;\n  padding: 24rpx 16rpx;\n}\n\n.header-cell {\n  flex: 1;\n  text-align: center;\n  font-size: 24rpx;\n  color: #666;\n  font-weight: bold;\n}\n\n.stats-row {\n  display: flex;\n  padding: 24rpx 16rpx;\n  border-bottom: 2rpx solid #f0f0f0;\n}\n\n.stats-row:last-child {\n  border-bottom: none;\n}\n\n.cell {\n  flex: 1;\n  text-align: center;\n  font-size: 26rpx;\n  color: #333;\n}\n\n.matches-section {\n  margin-bottom: 48rpx;\n}\n\n.matches-list {\n  background: white;\n  border-radius: 16rpx;\n  overflow: hidden;\n  box-shadow: 0 4rpx 16rpx rgba(0,0,0,0.1);\n}\n\n.no-data {\n  padding: 80rpx;\n  text-align: center;\n  color: #999;\n}\n\n.matches-header {\n  display: flex;\n  background: #f8f8f8;\n  padding: 24rpx 32rpx;\n}\n\n.match-header-cell {\n  flex: 1;\n  text-align: center;\n  font-size: 24rpx;\n  color: #666;\n  font-weight: bold;\n}\n\n.match-row {\n  display: flex;\n  padding: 24rpx 32rpx;\n  border-bottom: 2rpx solid #f0f0f0;\n}\n\n.match-row:last-child {\n  border-bottom: none;\n}\n\n.match-cell {\n  flex: 1;\n  text-align: center;\n  font-size: 26rpx;\n  color: #333;\n}\n</style>\n","import MiniProgramPage from '/Users/wangjun/netease/mine/Scoring/uniapp/pages/single-stats/single-stats.vue'\nwx.createPage(MiniProgramPage)"],"names":["getSingleStats"],"mappings":"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"}