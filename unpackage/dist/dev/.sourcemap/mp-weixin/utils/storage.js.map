{"version":3,"file":"storage.js","sources":["utils/storage.js"],"sourcesContent":["/**\n * uniCloud云函数存储工具类\n */\n\n// 调用云函数的通用方法\nasync function callCloudFunction(action, data = {}, params = {}) {\n  try {\n    const result = await uniCloud.callFunction({\n      name: 'badminton-api',\n      data: {\n        action,\n        data,\n        params\n      }\n    })\n    \n    if (result.result.code === 0) {\n      return result.result.data\n    } else {\n      console.error('云函数调用失败:', result.result.message)\n      throw new Error(result.result.message)\n    }\n  } catch (error) {\n    console.error('云函数调用异常:', error)\n    throw error\n  }\n}\n\n// 获取队员列表\nexport async function getPlayers() {\n  try {\n    console.log('调用云函数获取队员列表...')\n    const result = await uniCloud.callFunction({\n      name: 'badminton-api',\n      data: {\n        action: 'getPlayers'\n      }\n    })\n    \n    console.log('云函数返回结果:', result)\n    \n    if (result.result.code === 0) {\n      const players = result.result.data.map(player => player.name)\n      console.log('解析后的队员列表:', players)\n      return players\n    } else {\n      console.error('获取队员列表失败:', result.result.message)\n      // 返回空数组，让调用方处理初始化\n      return []\n    }\n  } catch (error) {\n    console.error('获取队员列表异常:', error)\n    // 返回空数组，让调用方处理初始化\n    return []\n  }\n}\n\n// 初始化默认队员\nexport async function initPlayers() {\n  try {\n    const result = await uniCloud.callFunction({\n      name: 'badminton-api',\n      data: {\n        action: 'initPlayers'\n      }\n    })\n    \n    return result.result.code === 0\n  } catch (error) {\n    console.error('初始化队员失败:', error)\n    return false\n  }\n}\n\n// 添加队员\nexport async function addPlayer(name, avatar = '') {\n  try {\n    const result = await uniCloud.callFunction({\n      name: 'badminton-api',\n      data: {\n        action: 'addPlayer',\n        data: { name, avatar }\n      }\n    })\n    \n    return result.result.code === 0\n  } catch (error) {\n    console.error('添加队员失败:', error)\n    return false\n  }\n}\n\n// 获取单打比赛记录\nexport async function getSingleMatches(timeRange = 'all') {\n  try {\n    const result = await uniCloud.callFunction({\n      name: 'badminton-api',\n      data: {\n        action: 'getSingleMatches',\n        data: { timeRange }\n      }\n    })\n    \n    if (result.result.code === 0) {\n      return result.result.data\n    } else {\n      console.error('获取单打比赛记录失败:', result.result.message)\n      return []\n    }\n  } catch (error) {\n    console.error('获取单打比赛记录异常:', error)\n    return []\n  }\n}\n\n// 保存单打比赛记录\nexport async function saveSingleMatch(match) {\n  try {\n    const result = await uniCloud.callFunction({\n      name: 'badminton-api',\n      data: {\n        action: 'submitSingleMatch',\n        data: match\n      }\n    })\n    \n    if (result.result.code === 0) {\n      return { id: result.result.data.match_id, ...match }\n    } else {\n      console.error('保存单打比赛记录失败:', result.result.message)\n      return null\n    }\n  } catch (error) {\n    console.error('保存单打比赛记录异常:', error)\n    return null\n  }\n}\n\n// 获取双打比赛记录\nexport async function getDoubleMatches(timeRange = 'all') {\n  try {\n    const result = await uniCloud.callFunction({\n      name: 'badminton-api',\n      data: {\n        action: 'getDoubleMatches',\n        data: { timeRange }\n      }\n    })\n    \n    if (result.result.code === 0) {\n      return result.result.data\n    } else {\n      console.error('获取双打比赛记录失败:', result.result.message)\n      return []\n    }\n  } catch (error) {\n    console.error('获取双打比赛记录异常:', error)\n    return []\n  }\n}\n\n// 保存双打比赛记录\nexport async function saveDoubleMatch(match) {\n  try {\n    const result = await uniCloud.callFunction({\n      name: 'badminton-api',\n      data: {\n        action: 'submitDoubleMatch',\n        data: match\n      }\n    })\n    \n    if (result.result.code === 0) {\n      return { id: result.result.data.match_id, ...match }\n    } else {\n      console.error('保存双打比赛记录失败:', result.result.message)\n      return null\n    }\n  } catch (error) {\n    console.error('保存双打比赛记录异常:', error)\n    return null\n  }\n}\n\n// 获取单打统计数据\nexport async function getSingleStats(timeRange = 'all') {\n  try {\n    const result = await uniCloud.callFunction({\n      name: 'badminton-api',\n      data: {\n        action: 'getSingleStats',\n        data: { timeRange }\n      }\n    })\n    \n    if (result.result.code === 0) {\n      return result.result.data\n    } else {\n      console.error('获取单打统计数据失败:', result.result.message)\n      return { stats: {}, matches: [] }\n    }\n  } catch (error) {\n    console.error('获取单打统计数据异常:', error)\n    return { stats: {}, matches: [] }\n  }\n}\n\n// 获取双打统计数据\nexport async function getDoubleStats(timeRange = 'all') {\n  try {\n    const result = await uniCloud.callFunction({\n      name: 'badminton-api',\n      data: {\n        action: 'getDoubleStats',\n        data: { timeRange }\n      }\n    })\n    \n    if (result.result.code === 0) {\n      return result.result.data\n    } else {\n      console.error('获取双打统计数据失败:', result.result.message)\n      return { stats: {}, matches: [] }\n    }\n  } catch (error) {\n    console.error('获取双打统计数据异常:', error)\n    return { stats: {}, matches: [] }\n  }\n}\n"],"names":["uni","uniCloud"],"mappings":"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"}